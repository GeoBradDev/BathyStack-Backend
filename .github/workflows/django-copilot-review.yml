name: Django Copilot Code Review

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  copilot-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run GitHub Copilot Code Review
        uses: github/copilot-cli-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          review-mode: full  # Options: full, summary, inline-comments

      - name: Post Copilot Review Comments
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const reviewBody = "GitHub Copilot has reviewed the code. Suggested changes are in the comments.";
            github.rest.pulls.createReview({
              owner,
              repo,
              pull_number: prNumber,
              body: reviewBody,
              event: "COMMENT"
            });

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff mypy bandit django

      - name: Run Ruff (Linting & Formatting)
        run: ruff check . --fix

      - name: Run Ruff Format Check (Ensures code is correctly formatted)
        run: ruff format --check

      - name: Run Mypy (Type Checking for Django Ninja)
        run: mypy --strict-optional --disallow-untyped-defs .

      - name: Run Bandit (Security Scan)
        run: bandit -r .

      - name: Run Django Check
        run: python manage.py check

  ruff-fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Apply Ruff Autofix
        run: |
          ruff check . --fix
          ruff format .

      - name: Commit and Push Fixes
        run: |
          git config --global user.email "bot@example.com"
          git config --global user.name "GitHub Bot"
          git add .
          git commit -m "Apply Ruff automated fixes"
          git push
